{
  "$schema" : "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion" : "1.0.0.0",
  "parameters" : {
    "image" : {
      "type" : "string",
      "metadata" : {
        "description" : "OS to use."
      }
    },
    "BootstrapIgnition" : {
      "type" : "string",
      "minLength" : 1,
      "metadata" : {
        "description" : "User name for the Virtual Machine and OpenShift Webconsole."
      }
    },
    "sshKeyData" : {
      "type" : "securestring",
      "metadata" : {
        "description" : "SSH RSA public key file as a string."
      }
    },
    "masterVMSize" : {
      "type" : "string",
      "defaultValue" : "Standard_D8_v3",
      "allowedValues" : [
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D8_v3",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_E2_v3",
        "Standard_E4_v3",
        "Standard_E8_v3",
        "Standard_E16_v3",
        "Standard_E32_v3",
        "Standard_E64_v3",
        "Standard_E2s_v3",
        "Standard_E4s_v3",
        "Standard_E8s_v3",
        "Standard_E16s_v3",
        "Standard_E32s_v3",
        "Standard_E64s_v3",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_D2s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3"
      ],
      "metadata" : {
        "description" : "The size of the Master Virtual Machine."
      }
    }
  },
  "variables" : {
    "virtualNetworkName" : "openshiftVnet",
    "mastersubnetName" : "masterSubnet",
    "nodeStorageName" : "[concat('sa', resourceGroup().name)]",
    "vnetId" : "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "masterSubnetRef" : "[concat(variables('vnetId'), '/subnets/', variables('mastersubnetName'))]",
    "masterLoadBalancerName" : "[concat('MasterLb',resourceGroup().name)]",
    "apiVersion" : "2018-06-01",
    "sshKeyPath" : "/home/core/.ssh/authorized_keys",
    "useridname" : "[concat(resourceGroup().name,'_userid')]",
    "vmName": "bootstrap-0"
  },
  "resources" : [
    {
      "apiVersion" : "[variables('apiVersion')]",
      "type" : "Microsoft.Network/networkInterfaces",
      "name" : "[concat(variables('vmName'), 'nic')]",
      "location" : "[resourceGroup().location]",
      "dependsOn" : [
        "[concat('Microsoft.Network/networkSecurityGroups/', concat(variables('vmName'), 'nsg'))]"
      ],
      "properties" : {
        "ipConfigurations" : [
          {
            "name" : "ipconfig1",
            "properties" : {
              "privateIPAllocationMethod" : "Dynamic",
              "subnet" : {
                "id" : "[variables('masterSubnetRef')]"
              },
              "loadBalancerBackendAddressPools" : [
                {
                  "id" : "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('masterLoadBalancerName'), '/backendAddressPools/loadBalancerBackEnd')]"
                },
                {
                  "id" : "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', resourceGroup().name,'intlb', '/backendAddressPools/masters')]"
                }
              ]
            }
          }
        ],
        "networkSecurityGroup" : {
          "id" : "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('vmName'), 'nsg'))]"
        }
      }
    },
    {
      "apiVersion" : "[variables('apiVersion')]",
      "type" : "Microsoft.Compute/virtualMachines",
      "name" : "[variables('vmName')]",
      "location" : "[resourceGroup().location]",
      "identity" : {
        "type" : "userAssigned",
        "userAssignedIdentities" : {
          "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('useridname'))]" : {}
        }
      },
      "dependsOn" : [
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('vmName'), 'nic'))]"
      ],
      "properties" : {
        "hardwareProfile" : {
          "vmSize" : "[parameters('masterVMSize')]"
        },
        "osProfile" : {
          "computerName" : "[variables('vmName')]",
          "adminUsername" : "core",
          "customData" : "[parameters('BootstrapIgnition')]",
          "linuxConfiguration" : {
            "disablePasswordAuthentication" : "true",
            "ssh" : {
              "publicKeys" : [
                {
                  "path" : "[variables('sshKeyPath')]",
                  "keyData" : "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile" : {
          "osDisk" : {
            "name" : "osdisk",
            "osType" : "Linux",
            "image" : {
              "uri" : "[parameters('image')]"
            },
            "vhd" : {
              "uri" : "[concat('http://', variables('nodeStorageName'), '.blob.core.windows.net/openshiftvmachines/', variables('vmName'), '.vhd')]"
            },
            "caching" : "ReadWrite",
            "createOption" : "FromImage",
            "diskSizeGB" : "128"
          },
          "dataDisks" : [
            {
              "caching" : "None",
              "createOption" : "Empty",
              "diskSizeGB" : "128",
              "lun" : 0,
              "name" : "datadisk1",
              "vhd" : {
                "uri" : "[concat('http://', variables('nodeStorageName'), '.blob.core.windows.net/openshiftvmachines/', variables('vmName'), '_datadisk1.vhd')]"
              }
            },
            {
              "caching" : "None",
              "createOption" : "Empty",
              "diskSizeGB" : "128",
              "lun" : 1,
              "name" : "datadisk2",
              "vhd" : {
                "uri" : "[concat('http://', variables('nodeStorageName'), '.blob.core.windows.net/openshiftvmachines/', variables('vmName'), '_datadisk2.vhd')]"
              }
            }
          ]
        },
        "networkProfile" : {
          "networkInterfaces" : [
            {
              "id" : "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName'), 'nic'))]"
            }
          ]
        },
        "availabilitySet" : {
          "id" : "[resourceId('Microsoft.Compute/availabilitySets', 'masteravailabilityset')]"
        }
      }
    },
    {
      "type" : "Microsoft.Network/networkSecurityGroups",
      "name" : "[concat(variables('vmName'), 'nsg')]",
      "tags" : {
        "displayName" : "NetworkSecurityGroup"
      },
      "apiVersion" : "[variables('apiVersion')]",
      "location" : "[resourceGroup().location]",
      "properties" : {
        "securityRules" : [
          {
            "name" : "default-allow-openshift-master",
            "properties" : {
              "protocol" : "Tcp",
              "sourcePortRange" : "*",
              "destinationPortRange" : "6443",
              "sourceAddressPrefix" : "*",
              "destinationAddressPrefix" : "*",
              "access" : "Allow",
              "priority" : 2000,
              "direction" : "Inbound"
            }
          }
        ]
      }
    }
  ],
  "outputs" : {}
}